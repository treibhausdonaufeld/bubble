# Generated by Django 5.1.4 on 2025-01-07 11:33

from django.db import migrations


def setup_filter_fields(apps, schema_editor):
    ItemCategory = apps.get_model('categories', 'ItemCategory')
    
    # Define filter fields for each content type
    filter_fields_mapping = {
        'Sachen': {
            'status': {
                'type': 'choice',
                'choices': ['new', 'used', 'old'],
                'label': 'Zustand'
            }
        },
        'Events': {
            'event_date': {
                'type': 'date_range',
                'label': 'Veranstaltungsdatum'
            },
            'location': {
                'type': 'text',
                'label': 'Ort'
            }
        },
        'Dienste': {
            'duration': {
                'type': 'choice',
                'choices': ['1h', '2h', '4h', '1d', '1w'],
                'label': 'Dauer'
            }
        }
    }
    
    # Update existing root categories
    for name, filter_fields in filter_fields_mapping.items():
        try:
            category = ItemCategory.objects.get(name=name, parent_category=None)
            category.filter_fields = filter_fields
            category.save()
        except ItemCategory.DoesNotExist:
            pass


def reverse_filter_fields(apps, schema_editor):
    ItemCategory = apps.get_model('categories', 'ItemCategory')
    
    # Clear filter fields
    ItemCategory.objects.filter(parent_category=None).update(
        filter_fields={}
    )


class Migration(migrations.Migration):

    dependencies = [
        ('categories', '0007_add_filter_fields'),
    ]

    operations = [
        migrations.RunPython(setup_filter_fields, reverse_filter_fields),
    ]