# Generated by Django 5.1.4 on 2025-01-07 11:33

from django.db import migrations


def setup_initial_content_types(apps, schema_editor):
    ItemCategory = apps.get_model('categories', 'ItemCategory')
    
    # Define initial content types for root categories
    content_type_mapping = {
        'Sachen': {
            'url_slug': 'sachen',
            'required_fields': {
                'status': {
                    'type': 'choice',
                    'choices': ['new', 'used', 'old'],
                    'label': 'Zustand'
                }
            },
            'optional_fields': {}
        },
        'Events': {
            'url_slug': 'events',
            'required_fields': {
                'event_date': {
                    'type': 'datetime',
                    'label': 'Veranstaltungsdatum'
                },
                'location': {
                    'type': 'text',
                    'label': 'Ort'
                }
            },
            'optional_fields': {
                'max_participants': {
                    'type': 'number',
                    'label': 'Maximale Teilnehmerzahl'
                }
            }
        },
        'Dienste': {
            'url_slug': 'dienste',
            'required_fields': {
                'duration': {
                    'type': 'text',
                    'label': 'Dauer'
                }
            },
            'optional_fields': {
                'availability': {
                    'type': 'text',
                    'label': 'Verf√ºgbarkeit'
                }
            }
        }
    }
    
    # Update existing root categories
    for name, settings in content_type_mapping.items():
        try:
            category = ItemCategory.objects.get(name=name, parent_category=None)
            category.url_slug = settings['url_slug']
            category.required_fields = settings['required_fields']
            category.optional_fields = settings['optional_fields']
            category.save()
        except ItemCategory.DoesNotExist:
            # Create category if it doesn't exist
            ItemCategory.objects.create(
                name=name,
                url_slug=settings['url_slug'],
                required_fields=settings['required_fields'],
                optional_fields=settings['optional_fields']
            )


def reverse_content_types(apps, schema_editor):
    ItemCategory = apps.get_model('categories', 'ItemCategory')
    
    # Clear content type fields
    ItemCategory.objects.filter(parent_category=None).update(
        url_slug='',
        required_fields={},
        optional_fields={}
    )


class Migration(migrations.Migration):

    dependencies = [
        ('categories', '0003_add_content_type_fields'),
    ]

    operations = [
        migrations.RunPython(setup_initial_content_types, reverse_content_types),
    ]