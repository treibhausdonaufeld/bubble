#!/bin/bash

set -o errexit
set -o pipefail
set -o nounset

if [ -z "${POSTGRES_USER}" ]; then
    base_postgres_image_default_user='postgres'
    export POSTGRES_USER="${base_postgres_image_default_user}"
fi
export DATABASE_URL="postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@${POSTGRES_HOST}:${POSTGRES_PORT}/${POSTGRES_DB}"

wait-for-it "${POSTGRES_HOST}:${POSTGRES_PORT}" -t 30

>&2 echo 'PostgreSQL is available'

# Optionally collect static files (creates manifest used by ManifestStaticFilesStorage/Whitenoise)
# Set DJANGO_COLLECT_STATIC=0 to skip in environments where static assets are built separately.
if [ "${DJANGO_COLLECT_STATIC:-1}" = "1" ]; then
    >&2 echo 'Collecting static files (python manage.py collectstatic)'
    # Use manage.py from project root; fail the container if collectstatic fails
    python manage.py collectstatic --noinput
fi

exec "$@"
