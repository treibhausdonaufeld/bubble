# Generated by Django 5.2.7 on 2025-10-17 04:49

import django.db.models.deletion
import pgvector.django.vector
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
        ("items", "0001_initial"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.AddField(
            model_name="historicalitem",
            name="history_user",
            field=models.ForeignKey(
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="+",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AddField(
            model_name="historicalitem",
            name="user",
            field=models.ForeignKey(
                blank=True,
                db_constraint=False,
                null=True,
                on_delete=django.db.models.deletion.DO_NOTHING,
                related_name="+",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.CreateModel(
            name="ItemEmbedding",
            fields=[
                (
                    "item",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        primary_key=True,
                        related_name="embedding",
                        serialize=False,
                        to="items.item",
                    ),
                ),
                (
                    "vector",
                    pgvector.django.vector.VectorField(
                        blank=True,
                        dimensions=384,
                        help_text="Embedding vector for semantic search",
                        null=True,
                    ),
                ),
            ],
        ),
        migrations.AddField(
            model_name="item",
            name="user",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="items",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AddField(
            model_name="image",
            name="item",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="images",
                to="items.item",
            ),
        ),
        migrations.AddField(
            model_name="itemgroupobjectpermission",
            name="content_object",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, to="items.item"
            ),
        ),
        migrations.AddField(
            model_name="itemgroupobjectpermission",
            name="group",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, to="auth.group"
            ),
        ),
        migrations.AddField(
            model_name="itemgroupobjectpermission",
            name="permission",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, to="auth.permission"
            ),
        ),
        migrations.AddField(
            model_name="itemuserobjectpermission",
            name="content_object",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, to="items.item"
            ),
        ),
        migrations.AddField(
            model_name="itemuserobjectpermission",
            name="permission",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, to="auth.permission"
            ),
        ),
        migrations.AddField(
            model_name="itemuserobjectpermission",
            name="user",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL
            ),
        ),
        migrations.AddConstraint(
            model_name="item",
            constraint=models.CheckConstraint(
                condition=models.Q(
                    ("sale_price__isnull", True),
                    ("rental_price__isnull", True),
                    _connector="OR",
                ),
                name="items_sale_or_rental_price_not_both",
            ),
        ),
        migrations.AlterUniqueTogether(
            name="itemgroupobjectpermission",
            unique_together={("group", "permission", "content_object")},
        ),
        migrations.AlterUniqueTogether(
            name="itemuserobjectpermission",
            unique_together={("user", "permission", "content_object")},
        ),
    ]
